"""
Django settings for EcoFactProject project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os  # Importamos os para manejar rutas de archivos en el sistema operativo
from decouple import config

# Construye rutas dentro del proyecto, BASE_DIR apunta a la carpeta raíz del proyecto
BASE_DIR = Path(__file__).resolve().parent.parent


# Configuraciones básicas de seguridad y despliegue

SECRET_KEY = config('SECRET_KEY', default='django-insecure-b%oh&@$)n5f89ef_#8%l96#tu+0)ujp%@l_wow)8ulgf2etj7+')
# Clave secreta para criptografía, debe mantenerse privada en producción

DEBUG = config('DEBUG', default=True, cast=bool)
# Modo debug activado para desarrollo, desactivar en producción

ALLOWED_HOSTS = []
# Lista de hosts permitidos para servir la app, vacía permite localhost


# Aplicaciones instaladas en el proyecto
INSTALLED_APPS = [
    'django.contrib.admin',          # Admin de Django
    'django.contrib.auth',           # Sistema de autenticación
    'django.contrib.contenttypes',   # Soporte para tipos de contenido
    'django.contrib.sessions',       # Manejo de sesiones
    'django.contrib.messages',       # Mensajes flash
    'django.contrib.staticfiles',    # Archivos estáticos (CSS, JS)
    'core',                         # Tu app principal donde están los modelos y lógica
    'productos',                    # App para gestión de productos
    'facturas',                     #App para gention de facturas
]

# Middleware: capas que procesan las peticiones y respuestas
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # Protección CSRF
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Autenticación
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.RoleRedirectMiddleware',  # Middleware personalizado para redirecciones por rol
]

ROOT_URLCONF = 'EcoFactProject.urls'
# Archivo principal de rutas URL

# Configuración de plantillas HTML
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Motor de plantillas Django
        'DIRS': [],  # Directorios adicionales para buscar plantillas
        'APP_DIRS': True,  # Buscar plantillas dentro de las apps instaladas
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',  # Añade objeto request al contexto
                'django.contrib.auth.context_processors.auth',  # Añade info de usuario autenticado
                'django.contrib.messages.context_processors.messages',  # Añade mensajes flash
            ],
        },
    },
]

WSGI_APPLICATION = 'EcoFactProject.wsgi.application'
# Punto de entrada WSGI para servidores de producción


# Configuración de base de datos (PostgreSQL preferido, SQLite como fallback)
USE_POSTGRESQL = config('USE_POSTGRESQL', default=False, cast=bool)

if USE_POSTGRESQL:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': config('DB_NAME', default='ecofact'),
            'USER': config('DB_USER', default='postgres'),
            'PASSWORD': config('DB_PASSWORD', default='123'),
            'HOST': config('DB_HOST', default='localhost'),
            'PORT': config('DB_PORT', default='5432'),
            'OPTIONS': {
                'sslmode': 'require', #asegura que la conexión con tu base de datos Neon sea segura y encriptada, pero no valida contra qué servidor te conectas
            },
     }
}
else:
    # SQLite como fallback para desarrollo
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Validadores de contraseña para mejorar seguridad
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]


# Configuración internacional
LANGUAGE_CODE = 'en-us'  # Idioma por defecto

TIME_ZONE = 'UTC'        # Zona horaria

USE_I18N = True          # Soporte para internacionalización

USE_TZ = True            # Uso de zonas horarias


# Archivos estáticos (CSS, JS, imágenes estáticas)
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Para producción - donde Django recogerá todos los archivos estáticos
STATIC_ROOT = BASE_DIR / "staticfiles"



# Configuración para archivos multimedia (imágenes subidas por usuarios)
MEDIA_URL = '/media/'  # URL base para acceder a archivos media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Carpeta donde se almacenan los archivos media

# Tipo de campo por defecto para claves primarias
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# ---------------------------------------------------
# Cambios específicos para tu proyecto:

# 1. AUTH_USER_MODEL:
#    Le indicamos a Django que use el modelo de usuario personalizado 'Usuario' que definiste en la app 'core'.
#    Esto es fundamental para que el sistema de autenticación funcione con tu modelo y no con el User por defecto.
AUTH_USER_MODEL = 'core.Usuario'

# 2. MEDIA_URL y MEDIA_ROOT:
#    Configuramos la ruta y URL para manejar archivos multimedia (imágenes) que se usan en los campos ImageField de tus modelos.
#    MEDIA_URL es la URL pública para acceder a estos archivos.
#    MEDIA_ROOT es la ruta absoluta en el sistema donde se guardan los archivos subidos.
#    Recuerda que en desarrollo debes configurar urls.py para servir estos archivos.
    
#CONFIGURACIÓN MAILTRAP

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "sandbox.smtp.mailtrap.io"
EMAIL_HOST_USER = "37784d5fd7e4f7"
EMAIL_HOST_PASSWORD = "d1db56fe8a2834"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = "facturacion@ecofact.com"